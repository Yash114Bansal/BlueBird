"""Initial migration - create bookings tables

Revision ID: 2d82e4b69f2d
Revises: 
Create Date: 2025-09-14 09:41:16.950316

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2d82e4b69f2d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bookings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('booking_reference', sa.String(length=50), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'CANCELLED', 'EXPIRED', 'REFUNDED', 'COMPLETED', name='bookingstatus'), nullable=False),
    sa.Column('payment_status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'REFUNDED', name='paymentstatus'), nullable=False),
    sa.Column('booking_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('payment_reference', sa.String(length=100), nullable=True),
    sa.Column('payment_processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.CheckConstraint('quantity > 0', name='check_quantity_positive'),
    sa.CheckConstraint('total_amount >= 0', name='check_total_amount_positive'),
    sa.CheckConstraint('version > 0', name='check_version_positive'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_booking_expires', 'bookings', ['expires_at'], unique=False)
    op.create_index('idx_booking_status_date', 'bookings', ['status', 'booking_date'], unique=False)
    op.create_index('idx_booking_user_event', 'bookings', ['user_id', 'event_id'], unique=False)
    op.create_index(op.f('ix_bookings_booking_reference'), 'bookings', ['booking_reference'], unique=True)
    op.create_index(op.f('ix_bookings_event_id'), 'bookings', ['event_id'], unique=False)
    op.create_index(op.f('ix_bookings_id'), 'bookings', ['id'], unique=False)
    op.create_index(op.f('ix_bookings_payment_reference'), 'bookings', ['payment_reference'], unique=False)
    op.create_index(op.f('ix_bookings_payment_status'), 'bookings', ['payment_status'], unique=False)
    op.create_index(op.f('ix_bookings_status'), 'bookings', ['status'], unique=False)
    op.create_index(op.f('ix_bookings_user_id'), 'bookings', ['user_id'], unique=False)
    op.create_table('event_availability',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('event_name', sa.String(length=255), nullable=True),
    sa.Column('total_capacity', sa.Integer(), nullable=False),
    sa.Column('available_capacity', sa.Integer(), nullable=False),
    sa.Column('reserved_capacity', sa.Integer(), nullable=False),
    sa.Column('confirmed_capacity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('last_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('available_capacity + reserved_capacity + confirmed_capacity = total_capacity', name='check_capacity_consistency'),
    sa.CheckConstraint('available_capacity >= 0', name='check_available_capacity_positive'),
    sa.CheckConstraint('confirmed_capacity >= 0', name='check_confirmed_capacity_positive'),
    sa.CheckConstraint('reserved_capacity >= 0', name='check_reserved_capacity_positive'),
    sa.CheckConstraint('total_capacity >= 0', name='check_total_capacity_positive'),
    sa.CheckConstraint('version > 0', name='check_availability_version_positive'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_availability_event', 'event_availability', ['event_id'], unique=False)
    op.create_index(op.f('ix_event_availability_event_id'), 'event_availability', ['event_id'], unique=True)
    op.create_index(op.f('ix_event_availability_id'), 'event_availability', ['id'], unique=False)
    op.create_table('waitlist_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'NOTIFIED', 'BOOKED', 'EXPIRED', 'CANCELLED', name='waitliststatus'), nullable=False),
    sa.Column('joined_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('notified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('booked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.CheckConstraint('priority > 0', name='check_waitlist_priority_positive'),
    sa.CheckConstraint('quantity > 0', name='check_waitlist_quantity_positive'),
    sa.CheckConstraint('version > 0', name='check_waitlist_version_positive'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'event_id', name='unique_user_event_waitlist')
    )
    op.create_index('idx_waitlist_event_priority', 'waitlist_entries', ['event_id', 'priority'], unique=False)
    op.create_index('idx_waitlist_expires', 'waitlist_entries', ['expires_at'], unique=False)
    op.create_index('idx_waitlist_status_priority', 'waitlist_entries', ['status', 'priority'], unique=False)
    op.create_index('idx_waitlist_user_event', 'waitlist_entries', ['user_id', 'event_id'], unique=False)
    op.create_index(op.f('ix_waitlist_entries_event_id'), 'waitlist_entries', ['event_id'], unique=False)
    op.create_index(op.f('ix_waitlist_entries_id'), 'waitlist_entries', ['id'], unique=False)
    op.create_index(op.f('ix_waitlist_entries_priority'), 'waitlist_entries', ['priority'], unique=False)
    op.create_index(op.f('ix_waitlist_entries_status'), 'waitlist_entries', ['status'], unique=False)
    op.create_index(op.f('ix_waitlist_entries_user_id'), 'waitlist_entries', ['user_id'], unique=False)
    op.create_table('booking_audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('field_name', sa.String(length=100), nullable=True),
    sa.Column('old_value', sa.Text(), nullable=True),
    sa.Column('new_value', sa.Text(), nullable=True),
    sa.Column('changed_by', sa.Integer(), nullable=True),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_action_date', 'booking_audit_logs', ['action', 'changed_at'], unique=False)
    op.create_index('idx_audit_booking', 'booking_audit_logs', ['booking_id'], unique=False)
    op.create_index(op.f('ix_booking_audit_logs_booking_id'), 'booking_audit_logs', ['booking_id'], unique=False)
    op.create_index(op.f('ix_booking_audit_logs_id'), 'booking_audit_logs', ['id'], unique=False)
    op.create_table('booking_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('price_per_item', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('total_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('price_per_item >= 0', name='check_item_price_positive'),
    sa.CheckConstraint('quantity > 0', name='check_item_quantity_positive'),
    sa.CheckConstraint('total_price >= 0', name='check_item_total_positive'),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_booking_item_booking', 'booking_items', ['booking_id'], unique=False)
    op.create_index(op.f('ix_booking_items_booking_id'), 'booking_items', ['booking_id'], unique=False)
    op.create_index(op.f('ix_booking_items_id'), 'booking_items', ['id'], unique=False)
    op.create_table('waitlist_audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('waitlist_entry_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('field_name', sa.String(length=100), nullable=True),
    sa.Column('old_value', sa.Text(), nullable=True),
    sa.Column('new_value', sa.Text(), nullable=True),
    sa.Column('changed_by', sa.Integer(), nullable=True),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['waitlist_entry_id'], ['waitlist_entries.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_waitlist_audit_action_date', 'waitlist_audit_logs', ['action', 'changed_at'], unique=False)
    op.create_index('idx_waitlist_audit_entry', 'waitlist_audit_logs', ['waitlist_entry_id'], unique=False)
    op.create_index(op.f('ix_waitlist_audit_logs_id'), 'waitlist_audit_logs', ['id'], unique=False)
    op.create_index(op.f('ix_waitlist_audit_logs_waitlist_entry_id'), 'waitlist_audit_logs', ['waitlist_entry_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_waitlist_audit_logs_waitlist_entry_id'), table_name='waitlist_audit_logs')
    op.drop_index(op.f('ix_waitlist_audit_logs_id'), table_name='waitlist_audit_logs')
    op.drop_index('idx_waitlist_audit_entry', table_name='waitlist_audit_logs')
    op.drop_index('idx_waitlist_audit_action_date', table_name='waitlist_audit_logs')
    op.drop_table('waitlist_audit_logs')
    op.drop_index(op.f('ix_booking_items_id'), table_name='booking_items')
    op.drop_index(op.f('ix_booking_items_booking_id'), table_name='booking_items')
    op.drop_index('idx_booking_item_booking', table_name='booking_items')
    op.drop_table('booking_items')
    op.drop_index(op.f('ix_booking_audit_logs_id'), table_name='booking_audit_logs')
    op.drop_index(op.f('ix_booking_audit_logs_booking_id'), table_name='booking_audit_logs')
    op.drop_index('idx_audit_booking', table_name='booking_audit_logs')
    op.drop_index('idx_audit_action_date', table_name='booking_audit_logs')
    op.drop_table('booking_audit_logs')
    op.drop_index(op.f('ix_waitlist_entries_user_id'), table_name='waitlist_entries')
    op.drop_index(op.f('ix_waitlist_entries_status'), table_name='waitlist_entries')
    op.drop_index(op.f('ix_waitlist_entries_priority'), table_name='waitlist_entries')
    op.drop_index(op.f('ix_waitlist_entries_id'), table_name='waitlist_entries')
    op.drop_index(op.f('ix_waitlist_entries_event_id'), table_name='waitlist_entries')
    op.drop_index('idx_waitlist_user_event', table_name='waitlist_entries')
    op.drop_index('idx_waitlist_status_priority', table_name='waitlist_entries')
    op.drop_index('idx_waitlist_expires', table_name='waitlist_entries')
    op.drop_index('idx_waitlist_event_priority', table_name='waitlist_entries')
    op.drop_table('waitlist_entries')
    op.drop_index(op.f('ix_event_availability_id'), table_name='event_availability')
    op.drop_index(op.f('ix_event_availability_event_id'), table_name='event_availability')
    op.drop_index('idx_availability_event', table_name='event_availability')
    op.drop_table('event_availability')
    op.drop_index(op.f('ix_bookings_user_id'), table_name='bookings')
    op.drop_index(op.f('ix_bookings_status'), table_name='bookings')
    op.drop_index(op.f('ix_bookings_payment_status'), table_name='bookings')
    op.drop_index(op.f('ix_bookings_payment_reference'), table_name='bookings')
    op.drop_index(op.f('ix_bookings_id'), table_name='bookings')
    op.drop_index(op.f('ix_bookings_event_id'), table_name='bookings')
    op.drop_index(op.f('ix_bookings_booking_reference'), table_name='bookings')
    op.drop_index('idx_booking_user_event', table_name='bookings')
    op.drop_index('idx_booking_status_date', table_name='bookings')
    op.drop_index('idx_booking_expires', table_name='bookings')
    op.drop_table('bookings')
    # ### end Alembic commands ###